
/**
 * easyXDM
 * http://easyxdm.net/
 * Copyright(c) 2009-2011, Ã˜yvind Sean Kinsey, oyvind@kinsey.no.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
(function(N,d,p,K,k,H){var b=this;var n=Math.floor(Math.random()*10000);var q=Function.prototype;var Q=/^((http.?:)\/\/([^:\/\s]+)(:\d+)*)/;var R=/[\-\w]+\/\.\.\//;var F=/([^:])\/\//g;var I="";var o={};var M=N.easyXDM;var U="easyXDM_";var E;var y=false;var i;var h;function C(X,Z){var Y=typeof X[Z];return Y=="function"||(!!(Y=="object"&&X[Z]))||Y=="unknown"}function u(X,Y){return !!(typeof(X[Y])=="object"&&X[Y])}function r(X){return Object.prototype.toString.call(X)==="[object Array]"}function c(){var Z="Shockwave Flash",ad="application/x-shockwave-flash";if(!t(navigator.plugins)&&typeof navigator.plugins[Z]=="object"){var ab=navigator.plugins[Z].description;if(ab&&!t(navigator.mimeTypes)&&navigator.mimeTypes[ad]&&navigator.mimeTypes[ad].enabledPlugin){i=ab.match(/\d+/g)}}if(!i){var Y;try{Y=new ActiveXObject("ShockwaveFlash.ShockwaveFlash");i=Array.prototype.slice.call(Y.GetVariable("$version").match(/(\d+),(\d+),(\d+),(\d+)/),1);Y=null}catch(ac){}}if(!i){return false}var X=parseInt(i[0],10),aa=parseInt(i[1],10);h=X>9&&aa>0;return true}var v,x;if(C(N,"addEventListener")){v=function(Z,X,Y){Z.addEventListener(X,Y,false)};x=function(Z,X,Y){Z.removeEventListener(X,Y,false)}}else{if(C(N,"attachEvent")){v=function(X,Z,Y){X.attachEvent("on"+Z,Y)};x=function(X,Z,Y){X.detachEvent("on"+Z,Y)}}else{throw new Error("Browser not supported")}}var W=false,J=[],L;if("readyState" in d){L=d.readyState;W=L=="complete"||(~navigator.userAgent.indexOf("AppleWebKit/")&&(L=="loaded"||L=="interactive"))}else{W=!!d.body}function s(){if(W){return}W=true;for(var X=0;X<J.length;X++){J[X]()}J.length=0}if(!W){if(C(N,"addEventListener")){v(d,"DOMContentLoaded",s)}else{v(d,"readystatechange",function(){if(d.readyState=="complete"){s()}});if(d.documentElement.doScroll&&N===top){var g=function(){if(W){return}try{d.documentElement.doScroll("left")}catch(X){K(g,1);return}s()};g()}}v(N,"load",s)}function G(Y,X){if(W){Y.call(X);return}J.push(function(){Y.call(X)})}function m(){var Z=parent;if(I!==""){for(var X=0,Y=I.split(".");X<Y.length;X++){Z=Z[Y[X]]}}return Z.easyXDM}function e(X){N.easyXDM=M;I=X;if(I){U="easyXDM_"+I.replace(".","_")+"_"}return o}function z(X){return X.match(Q)[3]}function f(X){return X.match(Q)[4]||""}function j(Z){var X=Z.toLowerCase().match(Q);var aa=X[2],ab=X[3],Y=X[4]||"";if((aa=="http:"&&Y==":80")||(aa=="https:"&&Y==":443")){Y=""}return aa+"//"+ab+Y}function B(X){X=X.replace(F,"$1/");if(!X.match(/^(http||https):\/\//)){var Y=(X.substring(0,1)==="/")?"":p.pathname;if(Y.substring(Y.length-1)!=="/"){Y=Y.substring(0,Y.lastIndexOf("/")+1)}X=p.protocol+"//"+p.host+Y+X}while(R.test(X)){X=X.replace(R,"")}return X}function P(X,aa){var ac="",Z=X.indexOf("#");if(Z!==-1){ac=X.substring(Z);X=X.substring(0,Z)}var ab=[];for(var Y in aa){if(aa.hasOwnProperty(Y)){ab.push(Y+"="+H(aa[Y]))}}return X+(y?"#":(X.indexOf("?")==-1?"?":"&"))+ab.join("&")+ac}var S=(function(X){X=X.substring(1).split("&");var Z={},aa,Y=X.length;while(Y--){aa=X[Y].split("=");Z[aa[0]]=k(aa[1])}return Z}(/xdm_e=/.test(p.search)?p.search:p.hash));function t(X){return typeof X==="undefined"}var O=function(){var Y={};var Z={a:[1,2,3]},X='{"a":[1,2,3]}';if(typeof JSON!="undefined"&&typeof JSON.stringify==="function"&&JSON.stringify(Z).replace((/\s/g),"")===X){return JSON}if(Object.toJSON){if(Object.toJSON(Z).replace((/\s/g),"")===X){Y.stringify=Object.toJSON}}if(typeof String.prototype.evalJSON==="function"){Z=X.evalJSON();if(Z.a&&Z.a.length===3&&Z.a[2]===3){Y.parse=function(aa){return aa.evalJSON()}}}if(Y.stringify&&Y.parse){O=function(){return Y};return Y}return null};function T(X,Y,Z){var ab;for(var aa in Y){if(Y.hasOwnProperty(aa)){if(aa in X){ab=Y[aa];if(typeof ab==="object"){T(X[aa],ab,Z)}else{if(!Z){X[aa]=Y[aa]}}}else{X[aa]=Y[aa]}}}return X}function a(){var Y=d.body.appendChild(d.createElement("form")),X=Y.appendChild(d.createElement("input"));X.name=U+"TEST"+n;E=X!==Y.elements[X.name];d.body.removeChild(Y)}function A(Y){if(t(E)){a()}var ac;if(E){ac=d.createElement('<iframe name="'+Y.props.name+'"/>')}else{ac=d.createElement("IFRAME");ac.name=Y.props.name}ac.id=ac.name=Y.props.name;delete Y.props.name;if(typeof Y.container=="string"){Y.container=d.getElementById(Y.container)}if(!Y.container){T(ac.style,{position:"absolute",top:"-2000px",left:"0px"});Y.container=d.body}var ab=Y.props.src;Y.props.src="javascript:false";T(ac,Y.props);ac.border=ac.frameBorder=0;ac.allowTransparency=true;Y.container.appendChild(ac);if(Y.onLoad){v(ac,"load",Y.onLoad)}if(Y.usePost){var aa=Y.container.appendChild(d.createElement("form")),X;aa.target=ac.name;aa.action=ab;aa.method="POST";if(typeof(Y.usePost)==="object"){for(var Z in Y.usePost){if(Y.usePost.hasOwnProperty(Z)){if(E){X=d.createElement('<input name="'+Z+'"/>')}else{X=d.createElement("INPUT");X.name=Z}X.value=Y.usePost[Z];aa.appendChild(X)}}}aa.submit();aa.parentNode.removeChild(aa)}else{ac.src=ab}Y.props.src=ab;return ac}function V(aa,Z){if(typeof aa=="string"){aa=[aa]}var Y,X=aa.length;while(X--){Y=aa[X];Y=new RegExp(Y.substr(0,1)=="^"?Y:("^"+Y.replace(/(\*)/g,".$1").replace(/\?/g,".")+"$"));if(Y.test(Z)){return true}}return false}function l(Z){var ae=Z.protocol,Y;Z.isHost=Z.isHost||t(S.xdm_p);y=Z.hash||false;if(!Z.props){Z.props={}}if(!Z.isHost){Z.channel=S.xdm_c.replace(/["'<>\\]/g,"");Z.secret=S.xdm_s;Z.remote=S.xdm_e.replace(/["'<>\\]/g,"");ae=S.xdm_p;if(Z.acl&&!V(Z.acl,Z.remote)){throw new Error("Access denied for "+Z.remote)}}else{Z.remote=B(Z.remote);Z.channel=Z.channel||"default"+n++;Z.secret=Math.random().toString(16).substring(2);if(t(ae)){if(j(p.href)==j(Z.remote)){ae="4"}else{if(C(N,"postMessage")||C(d,"postMessage")){ae="1"}else{if(Z.swf&&C(N,"ActiveXObject")&&c()){ae="6"}else{if(navigator.product==="Gecko"&&"frameElement" in N&&navigator.userAgent.indexOf("WebKit")==-1){ae="5"}else{if(Z.remoteHelper){ae="2"}else{ae="0"}}}}}}}Z.protocol=ae;switch(ae){case"0":T(Z,{interval:100,delay:2000,useResize:true,useParent:false,usePolling:false},true);if(Z.isHost){if(!Z.local){var ac=p.protocol+"//"+p.host,X=d.body.getElementsByTagName("img"),ad;var aa=X.length;while(aa--){ad=X[aa];if(ad.src.substring(0,ac.length)===ac){Z.local=ad.src;break}}if(!Z.local){Z.local=N}}var ab={xdm_c:Z.channel,xdm_p:0};if(Z.local===N){Z.usePolling=true;Z.useParent=true;Z.local=p.protocol+"//"+p.host+p.pathname+p.search;ab.xdm_e=Z.local;ab.xdm_pa=1}else{ab.xdm_e=B(Z.local)}if(Z.container){Z.useResize=false;ab.xdm_po=1}Z.remote=P(Z.remote,ab)}else{T(Z,{channel:S.xdm_c,remote:S.xdm_e,useParent:!t(S.xdm_pa),usePolling:!t(S.xdm_po),useResize:Z.useParent?false:Z.useResize})}Y=[new o.stack.HashTransport(Z),new o.stack.ReliableBehavior({}),new o.stack.QueueBehavior({encode:true,maxLength:4000-Z.remote.length}),new o.stack.VerifyBehavior({initiate:Z.isHost})];break;case"1":Y=[new o.stack.PostMessageTransport(Z)];break;case"2":Z.remoteHelper=B(Z.remoteHelper);Y=[new o.stack.NameTransport(Z),new o.stack.QueueBehavior(),new o.stack.VerifyBehavior({initiate:Z.isHost})];break;case"3":Y=[new o.stack.NixTransport(Z)];break;case"4":Y=[new o.stack.SameOriginTransport(Z)];break;case"5":Y=[new o.stack.FrameElementTransport(Z)];break;case"6":if(!i){c()}Y=[new o.stack.FlashTransport(Z)];break}Y.push(new o.stack.QueueBehavior({lazy:Z.lazy,remove:true}));return Y}function D(aa){var ab,Z={incoming:function(ad,ac){this.up.incoming(ad,ac)},outgoing:function(ac,ad){this.down.outgoing(ac,ad)},callback:function(ac){this.up.callback(ac)},init:function(){this.down.init()},destroy:function(){this.down.destroy()}};for(var Y=0,X=aa.length;Y<X;Y++){ab=aa[Y];T(ab,Z,true);if(Y!==0){ab.down=aa[Y-1]}if(Y!==X-1){ab.up=aa[Y+1]}}return ab}function w(X){X.up.down=X.down;X.down.up=X.up;X.up=X.down=null}T(o,{version:"2.4.17.1",query:S,stack:{},apply:T,getJSONObject:O,whenReady:G,noConflict:e});o.DomHelper={on:v,un:x,requiresJSON:function(X){if(!u(N,"JSON")){d.write('<script type="text/javascript" src="'+X+'"><\/script>')}}};(function(){var X={};o.Fn={set:function(Y,Z){X[Y]=Z},get:function(Z,Y){var aa=X[Z];if(Y){delete X[Z]}return aa}}}());o.Socket=function(Y){var X=D(l(Y).concat([{incoming:function(ab,aa){Y.onMessage(ab,aa)},callback:function(aa){if(Y.onReady){Y.onReady(aa)}}}])),Z=j(Y.remote);this.origin=j(Y.remote);this.destroy=function(){X.destroy()};this.postMessage=function(aa){X.outgoing(aa,Z)};X.init()};o.Rpc=function(Z,Y){if(Y.local){for(var ab in Y.local){if(Y.local.hasOwnProperty(ab)){var aa=Y.local[ab];if(typeof aa==="function"){Y.local[ab]={method:aa}}}}}var X=D(l(Z).concat([new o.stack.RpcBehavior(this,Y),{callback:function(ac){if(Z.onReady){Z.onReady(ac)}}}]));this.origin=j(Z.remote);this.destroy=function(){X.destroy()};X.init()};o.stack.SameOriginTransport=function(Y){var Z,ab,aa,X;return(Z={outgoing:function(ad,ae,ac){aa(ad);if(ac){ac()}},destroy:function(){if(ab){ab.parentNode.removeChild(ab);ab=null}},onDOMReady:function(){X=j(Y.remote);if(Y.isHost){T(Y.props,{src:P(Y.remote,{xdm_e:p.protocol+"//"+p.host+p.pathname,xdm_c:Y.channel,xdm_p:4}),name:U+Y.channel+"_provider"});ab=A(Y);o.Fn.set(Y.channel,function(ac){aa=ac;K(function(){Z.up.callback(true)},0);return function(ad){Z.up.incoming(ad,X)}})}else{aa=m().Fn.get(Y.channel,true)(function(ac){Z.up.incoming(ac,X)});K(function(){Z.up.callback(true)},0)}},init:function(){G(Z.onDOMReady,Z)}})};o.stack.FlashTransport=function(aa){var ac,X,ab,ad,Y,ae;function af(ah,ag){K(function(){ac.up.incoming(ah,ad)},0)}function Z(ah){var ag=aa.swf+"?host="+aa.isHost;var aj="easyXDM_swf_"+Math.floor(Math.random()*10000);o.Fn.set("flash_loaded"+ah.replace(/[\-.]/g,"_"),function(){o.stack.FlashTransport[ah].swf=Y=ae.firstChild;var ak=o.stack.FlashTransport[ah].queue;for(var al=0;al<ak.length;al++){ak[al]()}ak.length=0});if(aa.swfContainer){ae=(typeof aa.swfContainer=="string")?d.getElementById(aa.swfContainer):aa.swfContainer}else{ae=d.createElement("div");T(ae.style,h&&aa.swfNoThrottle?{height:"20px",width:"20px",position:"fixed",right:0,top:0}:{height:"1px",width:"1px",position:"absolute",overflow:"hidden",right:0,top:0});d.body.appendChild(ae)}var ai="callback=flash_loaded"+ah.replace(/[\-.]/g,"_")+"&proto="+b.location.protocol+"&domain="+z(b.location.href)+"&port="+f(b.location.href)+"&ns="+I;ae.innerHTML="<object height='20' width='20' type='application/x-shockwave-flash' id='"+aj+"' data='"+ag+"'><param name='allowScriptAccess' value='always'></param><param name='wmode' value='transparent'><param name='movie' value='"+ag+"'></param><param name='flashvars' value='"+ai+"'></param><embed type='application/x-shockwave-flash' FlashVars='"+ai+"' allowScriptAccess='always' wmode='transparent' src='"+ag+"' height='1' width='1'></embed></object>"}return(ac={outgoing:function(ah,ai,ag){Y.postMessage(aa.channel,ah.toString());if(ag){ag()}},destroy:function(){try{Y.destroyChannel(aa.channel)}catch(ag){}Y=null;if(X){X.parentNode.removeChild(X);X=null}},onDOMReady:function(){ad=aa.remote;o.Fn.set("flash_"+aa.channel+"_init",function(){K(function(){ac.up.callback(true)})});o.Fn.set("flash_"+aa.channel+"_onMessage",af);aa.swf=B(aa.swf);var ah=z(aa.swf);var ag=function(){o.stack.FlashTransport[ah].init=true;Y=o.stack.FlashTransport[ah].swf;Y.createChannel(aa.channel,aa.secret,j(aa.remote),aa.isHost);if(aa.isHost){if(h&&aa.swfNoThrottle){T(aa.props,{position:"fixed",right:0,top:0,height:"20px",width:"20px"})}T(aa.props,{src:P(aa.remote,{xdm_e:j(p.href),xdm_c:aa.channel,xdm_p:6,xdm_s:aa.secret}),name:U+aa.channel+"_provider"});X=A(aa)}};if(o.stack.FlashTransport[ah]&&o.stack.FlashTransport[ah].init){ag()}else{if(!o.stack.FlashTransport[ah]){o.stack.FlashTransport[ah]={queue:[ag]};Z(ah)}else{o.stack.FlashTransport[ah].queue.push(ag)}}},init:function(){G(ac.onDOMReady,ac)}})};o.stack.PostMessageTransport=function(aa){var ac,ad,Y,Z;function X(ae){if(ae.origin){return j(ae.origin)}if(ae.uri){return j(ae.uri)}if(ae.domain){return p.protocol+"//"+ae.domain}throw"Unable to retrieve the origin of the event"}function ab(af){var ae=X(af);if(ae==Z&&af.data.substring(0,aa.channel.length+1)==aa.channel+" "){ac.up.incoming(af.data.substring(aa.channel.length+1),ae)}}return(ac={outgoing:function(af,ag,ae){Y.postMessage(aa.channel+" "+af,ag||Z);if(ae){ae()}},destroy:function(){x(N,"message",ab);if(ad){Y=null;ad.parentNode.removeChild(ad);ad=null}},onDOMReady:function(){Z=j(aa.remote);if(aa.isHost){var ae=function(af){if(af.data==aa.channel+"-ready"){Y=("postMessage" in ad.contentWindow)?ad.contentWindow:ad.contentWindow.document;x(N,"message",ae);v(N,"message",ab);K(function(){ac.up.callback(true)},0)}};v(N,"message",ae);T(aa.props,{src:P(aa.remote,{xdm_e:j(p.href),xdm_c:aa.channel,xdm_p:1}),name:U+aa.channel+"_provider"});ad=A(aa)}else{v(N,"message",ab);Y=("postMessage" in N.parent)?N.parent:N.parent.document;Y.postMessage(aa.channel+"-ready",Z);K(function(){ac.up.callback(true)},0)}},init:function(){G(ac.onDOMReady,ac)}})};o.stack.FrameElementTransport=function(Y){var Z,ab,aa,X;return(Z={outgoing:function(ad,ae,ac){aa.call(this,ad);if(ac){ac()}},destroy:function(){if(ab){ab.parentNode.removeChild(ab);ab=null}},onDOMReady:function(){X=j(Y.remote);if(Y.isHost){T(Y.props,{src:P(Y.remote,{xdm_e:j(p.href),xdm_c:Y.channel,xdm_p:5}),name:U+Y.channel+"_provider"});ab=A(Y);ab.fn=function(ac){delete ab.fn;aa=ac;K(function(){Z.up.callback(true)},0);return function(ad){Z.up.incoming(ad,X)}}}else{if(d.referrer&&j(d.referrer)!=S.xdm_e){N.top.location=S.xdm_e}aa=N.frameElement.fn(function(ac){Z.up.incoming(ac,X)});Z.up.callback(true)}},init:function(){G(Z.onDOMReady,Z)}})};o.stack.NameTransport=function(ab){var ac;var ae,ai,aa,ag,ah,Y,X;function af(al){var ak=ab.remoteHelper+(ae?"#_3":"#_2")+ab.channel;ai.contentWindow.sendMessage(al,ak)}function ad(){if(ae){if(++ag===2||!ae){ac.up.callback(true)}}else{af("ready");ac.up.callback(true)}}function aj(ak){ac.up.incoming(ak,Y)}function Z(){if(ah){K(function(){ah(true)},0)}}return(ac={outgoing:function(al,am,ak){ah=ak;af(al)},destroy:function(){ai.parentNode.removeChild(ai);ai=null;if(ae){aa.parentNode.removeChild(aa);aa=null}},onDOMReady:function(){ae=ab.isHost;ag=0;Y=j(ab.remote);ab.local=B(ab.local);if(ae){o.Fn.set(ab.channel,function(al){if(ae&&al==="ready"){o.Fn.set(ab.channel,aj);ad()}});X=P(ab.remote,{xdm_e:ab.local,xdm_c:ab.channel,xdm_p:2});T(ab.props,{src:X+"#"+ab.channel,name:U+ab.channel+"_provider"});aa=A(ab)}else{ab.remoteHelper=ab.remote;o.Fn.set(ab.channel,aj)}var ak=function(){var al=ai||this;x(al,"load",ak);o.Fn.set(ab.channel+"_load",Z);(function am(){if(typeof al.contentWindow.sendMessage=="function"){ad()}else{K(am,50)}}())};ai=A({props:{src:ab.local+"#_4"+ab.channel},onLoad:ak})},init:function(){G(ac.onDOMReady,ac)}})};o.stack.HashTransport=function(Z){var ac;var ah=this,af,aa,X,ad,am,ab,al;var ag,Y;function ak(ao){if(!al){return}var an=Z.remote+"#"+(am++)+"_"+ao;((af||!ag)?al.contentWindow:al).location=an}function ae(an){ad=an;ac.up.incoming(ad.substring(ad.indexOf("_")+1),Y)}function aj(){if(!ab){return}var an=ab.location.href,ap="",ao=an.indexOf("#");if(ao!=-1){ap=an.substring(ao)}if(ap&&ap!=ad){ae(ap)}}function ai(){aa=setInterval(aj,X)}return(ac={outgoing:function(an,ao){ak(an)},destroy:function(){N.clearInterval(aa);if(af||!ag){al.parentNode.removeChild(al)}al=null},onDOMReady:function(){af=Z.isHost;X=Z.interval;ad="#"+Z.channel;am=0;ag=Z.useParent;Y=j(Z.remote);if(af){T(Z.props,{src:Z.remote,name:U+Z.channel+"_provider"});if(ag){Z.onLoad=function(){ab=N;ai();ac.up.callback(true)}}else{var ap=0,an=Z.delay/50;(function ao(){if(++ap>an){throw new Error("Unable to reference listenerwindow")}try{ab=al.contentWindow.frames[U+Z.channel+"_consumer"]}catch(aq){}if(ab){ai();ac.up.callback(true)}else{K(ao,50)}}())}al=A(Z)}else{ab=N;ai();if(ag){al=parent;ac.up.callback(true)}else{T(Z,{props:{src:Z.remote+"#"+Z.channel+new Date(),name:U+Z.channel+"_consumer"},onLoad:function(){ac.up.callback(true)}});al=A(Z)}}},init:function(){G(ac.onDOMReady,ac)}})};o.stack.ReliableBehavior=function(Y){var aa,ac;var ab=0,X=0,Z="";return(aa={incoming:function(af,ad){var ae=af.indexOf("_"),ag=af.substring(0,ae).split(",");af=af.substring(ae+1);if(ag[0]==ab){Z="";if(ac){ac(true);ac=null}}if(af.length>0){aa.down.outgoing(ag[1]+","+ab+"_"+Z,ad);if(X!=ag[1]){X=ag[1];aa.up.incoming(af,ad)}}},outgoing:function(af,ad,ae){Z=af;ac=ae;aa.down.outgoing(X+","+(++ab)+"_"+af,ad)}})};o.stack.QueueBehavior=function(Z){var ac,ad=[],ag=true,aa="",af,X=0,Y=false,ab=false;function ae(){if(Z.remove&&ad.length===0){w(ac);return}if(ag||ad.length===0||af){return}ag=true;var ah=ad.shift();ac.down.outgoing(ah.data,ah.origin,function(ai){ag=false;if(ah.callback){K(function(){ah.callback(ai)},0)}ae()})}return(ac={init:function(){if(t(Z)){Z={}}if(Z.maxLength){X=Z.maxLength;ab=true}if(Z.lazy){Y=true}else{ac.down.init()}},callback:function(ai){ag=false;var ah=ac.up;ae();ah.callback(ai)},incoming:function(ak,ai){if(ab){var aj=ak.indexOf("_"),ah=parseInt(ak.substring(0,aj),10);aa+=ak.substring(aj+1);if(ah===0){if(Z.encode){aa=k(aa)}ac.up.incoming(aa,ai);aa=""}}else{ac.up.incoming(ak,ai)}},outgoing:function(al,ai,ak){if(Z.encode){al=H(al)}var ah=[],aj;if(ab){while(al.length!==0){aj=al.substring(0,X);al=al.substring(aj.length);ah.push(aj)}while((aj=ah.shift())){ad.push({data:ah.length+"_"+aj,origin:ai,callback:ah.length===0?ak:null})}}else{ad.push({data:al,origin:ai,callback:ak})}if(Y){ac.down.init()}else{ae()}},destroy:function(){af=true;ac.down.destroy()}})};o.stack.VerifyBehavior=function(ab){var ac,aa,Y,Z=false;function X(){aa=Math.random().toString(16).substring(2);ac.down.outgoing(aa)}return(ac={incoming:function(af,ad){var ae=af.indexOf("_");if(ae===-1){if(af===aa){ac.up.callback(true)}else{if(!Y){Y=af;if(!ab.initiate){X()}ac.down.outgoing(af)}}}else{if(af.substring(0,ae)===Y){ac.up.incoming(af.substring(ae+1),ad)}}},outgoing:function(af,ad,ae){ac.down.outgoing(aa+"_"+af,ad,ae)},callback:function(ad){if(ab.initiate){X()}}})};o.stack.RpcBehavior=function(ad,Y){var aa,af=Y.serializer||O();var ae=0,ac={};function X(ag){ag.jsonrpc="2.0";aa.down.outgoing(af.stringify(ag))}function ab(ag,ai){var ah=Array.prototype.slice;return function(){var aj=arguments.length,al,ak={method:ai};if(aj>0&&typeof arguments[aj-1]==="function"){if(aj>1&&typeof arguments[aj-2]==="function"){al={success:arguments[aj-2],error:arguments[aj-1]};ak.params=ah.call(arguments,0,aj-2)}else{al={success:arguments[aj-1]};ak.params=ah.call(arguments,0,aj-1)}ac[""+(++ae)]=al;ak.id=ae}else{ak.params=ah.call(arguments,0)}if(ag.namedParams&&ak.params.length===1){ak.params=ak.params[0]}X(ak)}}function Z(an,am,ai,al){if(!ai){if(am){X({id:am,error:{code:-32601,message:"Procedure not found."}})}return}var ak,ah;if(am){ak=function(ao){ak=q;X({id:am,result:ao})};ah=function(ao,ap){ah=q;var aq={id:am,error:{code:-32099,message:ao}};if(ap){aq.error.data=ap}X(aq)}}else{ak=ah=q}if(!r(al)){al=[al]}try{var ag=ai.method.apply(ai.scope,al.concat([ak,ah]));if(!t(ag)){ak(ag)}}catch(aj){ah(aj.message)}}return(aa={incoming:function(ah,ag){var ai=af.parse(ah);if(ai.method){if(Y.handle){Y.handle(ai,X)}else{Z(ai.method,ai.id,Y.local[ai.method],ai.params)}}else{var aj=ac[ai.id];if(ai.error){if(aj.error){aj.error(ai.error)}}else{if(aj.success){aj.success(ai.result)}}delete ac[ai.id]}},init:function(){if(Y.remote){for(var ag in Y.remote){if(Y.remote.hasOwnProperty(ag)){ad[ag]=ab(Y.remote[ag],ag)}}}aa.down.init()},destroy:function(){for(var ag in Y.remote){if(Y.remote.hasOwnProperty(ag)&&ad.hasOwnProperty(ag)){delete ad[ag]}}aa.down.destroy()}})};b.easyXDM=o})(window,document,location,window.setTimeout,decodeURIComponent,encodeURIComponent);
/**
 * this is the main application file, which one that init project bind event, etc...
 * Copyright (C) 2013 - Playground
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

//pl.ready(function ()
//{
    
	/**
	 * @namespace  reference to Playground.Promise object
	 */
     
    /**
     * Create a new instance of Promise pattern
     * 
     * @name promise
     */
    var promise = function ()
    {
        'use strict';
    };
    
    /**
     * Create a new instance of Promise pattern
     * 
     * @name PG.Promise
     * @class
	 * @constructor
	 * 
	 * @param {null}
	 * @return {Object} this
     * 
     * @this {object} PG.Promise
	 * 
	 * @example
	 * var p = new PG.Promise();
	 * // call success callback
	 * p.resolve();
	 * // call error callback
	 * p.reject();
	 * 
     * @since version 1.0.0
	 */
    promise.prototype = {
    
		/**
	     * @ignore
	     */
	    pending: {
	        resolve: function ()
			{
	            'use strict';
	        },
	        reject: function ()
	        {
	            'use strict';
	        }
	    },
	    
	    /** function called when a promise is done
	     * 
	     * @function
	     * @name PG.Promise.then
	     * 
	     * @param {Function} success callback
	     * @param {Function} failure callback
	     * 
	     * @this {object} PG.Promise
	     * 
	     * @example
	     * PG.Promise.then( {Function} success, {Function} error)
	     * 
	     * @since version 1.0.0
	     */
        then: function (success, failure)
        {
            'use strict';
            
            this.pending = { resolve: success, reject: failure };
            return this;
        },
        
	    /**
	     * never call this method, use then (success, failure)
	     * @function
	     * 
	     * @name PG.Promise.resolve
	     * 
	     * @param {object} value
	     * @return {null} no return
	     * 
	     * @this {object} PG.Promise
	     * 
	     * @ignore
	     * 
	     * @since version 1.0.0
	     */
        resolve: function (value)
        {
            'use strict';
            
            this.pending.resolve(value);
        },
        
	    /**
	     * never call this method, use then (success, failure)
	     * @function
	     * 
	     * @name PG.Promise.reject 
	     * 
	     * @param {object} value
	     * @return {null} no return
	     * 
	     * @this {object} PG.Promise
	     * 
	     * @ignore
	     * 
	     * @since version 1.0.0
	     */
        reject: function (error)
        {
            'use strict';
            
            this.pending.reject(error);
        }
    };
    
    // put the promise into Playground.Promise
    try {
        addToNamespace('Promise', promise);
    }catch(e) {
       throw new Error( "Cannot extends 'Promise' to 'Playground.Promise'" );
    }
//});
;

/**
 * Copyright (C) 2013 - Playground
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */ 

/** User Object
 * @class
 * @name PG.User
 */
var user = {
    
    env: { },
    id: null,
    uid: null,
    stories: { },
    urls: {
        current: window.location.href,
        prev: null
    },
    
    /**
     * Init the user object
     * @function
     * 
     * @name PG.User.init
     * 
     * @param {null}
     * @return {null}
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */ 
    init: function ()
    {
        'use strict';
        
        PG.Util.log('user.js > init');
        
        PG.Util.GenerateUniqueId();
        PG.User.urls.prev = PG.Util.readCookie('prev-url');
        
        var stories = PG.Util.readCookie('stories'),
            lastSync = PG.Util.readCookie('last-sync'),
            today = new Date().getTime();
        
        // @TODO : UNCOMMENT THIS TO KEEP THE AUTHENT FOR A ENTIRE DAY
        stories = null;
        
        if(!PG.Util.not_null(lastSync) || (parseInt(lastSync, 10) + parseInt(24 * 60 * 60, 10)) < today) {
            stories = null;
        }
        
        if(!PG.Util.not_null(stories)) {
            PG.User.loadStories()
            .then(function ()
            {
                PG.User.stories = JSON.parse(PG.Util.readCookie('stories'));
                // after
                PG.User.checkStories(false, true);
                // normal
                PG.User.checkStories(false, false);
            });
        }else {
            PG.User.stories = JSON.parse(PG.Util.readCookie('stories'));
            // after
            PG.User.checkStories(false, true);
            // normal
            PG.User.checkStories(false, false);
        }
    },
    
    /**
     * Methode to get stories
     * put the return into PG.User.stories
     * @function
     * 
     * @name PG.User.loadStories
     * 
     * @param {null}
     * @return {Object} promise
     *  
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    loadStories: function ()
    {
        'use strict';
        PG.Util.log('user.js > loadStories');
        
        var p = new PG.Promise();

        PG.App.call( PG.Config.env[PG.Config.mode].connect )
        .then(
            function (data)
            {
                PG.Util.createCookie('last-sync', new Date().getTime());
        
                PG.Util.log('user.js > loadStories > resolve promise', data);
                PG.Util.createCookie('stories', JSON.stringify(data));
                p.resolve();
            }
        );
        
        return p;
    },
    
    /**
     * Loop over all stories,
     * Call PG.User.checkStory
     * 
     * if story true and before = true 
     *  > save story user local
     * 
     * if story true and before and after = false
     *  > send story to playground
     * @function
     * 
     * @name PG.User.checkStories
     * 
     * @param {Boolean} before
     * @param {Boolean} after
     * @return {null}
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.1
     */
    checkStories: function (before, after)
    {
        'use strict';
        PG.Util.log('user.js > checkStories', PG.User.stories);
        
        var i, b = {}, a = {}, use, afterCookie, beforeCookie;
        
        if(typeof PG.User.stories !== 'undefined' && typeof PG.User.stories.library.stories !== 'undefined') {
            for(i in PG.User.stories.library.stories) {
                if(typeof PG.User.stories.library.stories[i] === 'object') {
                    use = PG.User.checkStory(PG.User.stories.library.stories[i], before, after);
                    
                    if(use && before) {
                        b[i] = "true";
                        PG.User.createObjectsStory(PG.User.stories.library.stories[i]);
                    }else if(before) {
                        b[i] = "false";
                    }
                    if(use && after) {
                        a[i] = "true";
                    }else if(after) {
                        a[i] = "false";
                    }
                    
                    if(use && !before && !after) {
                        beforeCookie = PG.Util.readCookie('before');
                        if(PG.Util.not_null(beforeCookie)) {
                            beforeCookie = JSON.parse(beforeCookie);
                        }
                        afterCookie = PG.Util.readCookie('after');
                        if(PG.Util.not_null(afterCookie)) {
                            afterCookie = JSON.parse(afterCookie);
                        }
                        if(beforeCookie[i] === 'true' && afterCookie[i] === 'true') {
                            PG.App.send(PG.User.getStory(PG.User.stories.library.stories[i]));
                        }
                    }
                }
            }
            // set cookie to remember after and before
            if(before) {
                PG.Util.createCookie('before', JSON.stringify(b));
            }else if(after) {
                PG.Util.createCookie('after', JSON.stringify(a));
            }else {
                // Else remove before event
                PG.Util.createCookie('before', '');
            }
        }
        
        return;
    },
    
    /**
     * Check single story
     * 
     * if before = true 
     *  > check only before event
     * 
     * if after = true
     *  > check only after event
     * 
     * @function
     * 
     * @name PG.User.checkStory
     * 
     * @param {Object} story
     * @param {Boolean} before
     * @param {Boolean} after
     * @return {Boolean} result true | false
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.1
     */
    checkStory: function (story, before, after)
    {
        'use strict';
        PG.Util.log('user.js > checkStory (before:'+before+', after:'+after+') > name "' + story.action + '"');
        
        var use = true;
        
        if(PG.Util.not_null(story)) {
            
            if(before) {
                
                if(story.events.before.length === 0) {
                    PG.Util.log('user.js > checkStory > use story : false');
                    return true;
                }
                
                // CHECK STORY URL ?
                if(PG.Util.not_null(story.events.before.url)) {
                    use = (window.location.href.indexOf(story.events.before.url) !== -1);
                }
                
                // CHECK STORY XPATH ?
                if(PG.Util.not_null(story.events.before.xpath)) {
                    use = PG.Util.checkXpath(story.events.before.xpath);
                }
                
                PG.Util.log('user.js > checkStory > before > use story : ' + before);
            }else if(after) {
                
                if(story.events.after.length === 0) {
                    PG.Util.log('user.js > checkStory > use story : false');
                    return true;
                }
                
                // CHECK STORY URL ?
                if(PG.Util.not_null(story.events.after.url)) {
                    use = (window.location.href.indexOf(story.events.after.url) !== -1);
                }
                
                // CHECK STORY XPATH ?
                if(PG.Util.not_null(story.events.after.xpath)) {
                    use = PG.Util.checkXpath(story.events.after.xpath);
                }
                
                PG.Util.log('user.js > checkStory > after > use story : ' + after);
            }else {
                // CHECK STORY URL ?
                if(PG.Util.not_null(story.conditions.url)) {
                    use = (window.location.href.indexOf(story.conditions.url) !== -1);
                }
                
                // CHECK STORY XPATH ?
                if(PG.Util.not_null(story.conditions.xpath)) {
                    use = PG.Util.checkXpath(story.conditions.xpath);
                }
                
                PG.Util.log('user.js > checkStory > use story : ' + use);
            }
        }
        
        return use;
    },
    
    /**
     * Create valid story ready to send for playground
     * @function
     * 
     * @name PG.User.createObjectsStory
     * 
     * @param {Object} story
     * @return {Object} objects
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    createObjectsStory: function (story)
    {
        'use strict';
        PG.Util.log('user.js > createObjectsStory');
        
        var objects = {}, xpathObjects, propValue, properties = [], i, j, k, saveObject;
        
        if(typeof story.story_mapping_id !== 'undefined') {
            // FOR EACH OBJECTS
            for(i in story.objects) {
                if(typeof story.objects[i] === 'object' && typeof story.objects[i].properties !== 'undefined') {
                    properties = {};
                    
                    // FOR EACH PROPERTIES
                    for(j in story.objects[i].properties) {
                        if(typeof story.objects[i].properties[j] === 'object' && typeof story.objects[i].properties[j].name !== 'undefined') {
                            xpathObjects = PG.Util.getObjectFromXpath(story.objects[i].properties[j].xpath);
                            if(typeof xpathObjects !== 'undefined') {
                                
                                // FOR EACH DOM OBJECT FROM XPATH
                                for(k in xpathObjects) {
                                    propValue =  PG.Util.getValueFromObject(xpathObjects[k]);
                                    if(typeof xpathObjects === 'object' && propValue !== '') {
                                        properties[story.objects[i].properties[j].name] = propValue;
                                    }
                                }
                            }
                        }
                    }
                    
                    objects[story.objects[i].id] = properties;
                }
            }
        }
        
        for(i in objects) {
            if(typeof objects[i] === 'object' && PG.Util.keys(objects[i]) > 0) {
                PG.Util.createCookie('object.' + story.story_mapping_id, JSON.stringify(objects[i]));
            }else {
                //objects[i] = JSON.parse(PG.Util.readCookie('object.' + story.action + '.' + objects[i].id));
                objects[i] = JSON.parse(PG.Util.readCookie('object.' + story.story_mapping_id));
            }
        }
        return objects;
    },
    
    /**
     * return json story
     * @function
     * 
     * @name PG.User.getStory
     * 
     * @param {String} url
     * @param {Object} story
     * @return {Boolean} result true | false
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    getStory: function (story)
    {
        'use strict';
        
        var objects = PG.User.createObjectsStory(story),
            json = {
            user: {
                anonymous: PG.User.uid
            },
            objects: (objects !== null) ? objects : [],
            story_mapping_id: story.story_mapping_id,
            url: window.location.href,
            apiKey: PG.Settings.apiKey
        };
        
        PG.Util.log("user.js > getStory");
        
        return json;
    },
    
    /**
     * Call this method when user quit the current to check if try to logout/login
     * make cookies 'login-try' and 'logout-try'
     * @function
     * 
     * @name PG.User.quit
     * 
     * @param {null}
     * @return {null}
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    quit: function ()
    {
        'use strict';
        
        PG.Util.log('user.js > quit');
        
        PG.User.checkStories(true, false);
        
        PG.Util.createCookie('prev-url', window.location.href);
        
        return;
    }
};

// put the user into Playground.User
try {
    addToNamespace('User', user);
}catch(e) {
   throw new Error( "Cannot extends 'User' to 'Playground.User'" );
}
=======
/**
 * Copyright (C) 2013 - Playground
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */ 

/** User Object
 * @class
 * @name PG.User
 */
var user = {
    
    env: { },
    id: null,
    uid: null,
    stories: { },
    urls: {
        current: window.location.href,
        prev: null
    },
    
    /**
     * Init the user object
     * @function
     * 
     * @name PG.User.init
     * 
     * @param {null}
     * @return {null}
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */ 
    init: function ()
    {
        'use strict';
        
        PG.Util.log('user.js > init');
        
        PG.Util.GenerateUniqueId();
        PG.User.urls.prev = PG.Util.readCookie('prev-url');
        
        var stories = PG.Util.readCookie('stories'),
            lastSync = PG.Util.readCookie('last-sync'),
            today = new Date().getTime();
        
        // @TODO : UNCOMMENT THIS TO KEEP THE AUTHENT FOR A ENTIRE DAY
        stories = null;
        
        if(!PG.Util.not_null(lastSync) || (parseInt(lastSync, 10) + parseInt(24 * 60 * 60, 10)) < today) {
            stories = null;
        }
        
        if(!PG.Util.not_null(stories)) {
            PG.User.loadStories()
            .then(function ()
            {
                PG.User.stories = JSON.parse(PG.Util.readCookie('stories'));
                // after
                PG.User.checkStories(false, true);
                // normal
                PG.User.checkStories(false, false);
            });
        }else {
            PG.User.stories = JSON.parse(PG.Util.readCookie('stories'));
            // after
            PG.User.checkStories(false, true);
            // normal
            PG.User.checkStories(false, false);
        }
    },
    
    /**
     * Methode to get stories
     * put the return into PG.User.stories
     * @function
     * 
     * @name PG.User.loadStories
     * 
     * @param {null}
     * @return {Object} promise
     *  
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    loadStories: function ()
    {
        'use strict';
        PG.Util.log('user.js > loadStories');
        
        var p = new PG.Promise();

        PG.App.call( PG.Config.env[PG.Config.mode].connect )
        .then(
            function (data)
            {
                PG.Util.createCookie('last-sync', new Date().getTime());
        
                PG.Util.log('user.js > loadStories > resolve promise', data);
                PG.Util.createCookie('stories', JSON.stringify(data));
                p.resolve();
            }
        );
        
        return p;
    },
    
    /**
     * Loop over all stories,
     * Call PG.User.checkStory
     * 
     * if story true and before = true 
     *  > save story user local
     * 
     * if story true and before and after = false
     *  > send story to playground
     * @function
     * 
     * @name PG.User.checkStories
     * 
     * @param {Boolean} before
     * @param {Boolean} after
     * @return {null}
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.1
     */
    checkStories: function (before, after)
    {
        'use strict';
        PG.Util.log('user.js > checkStories', PG.User.stories);
        
        var i, b = {}, a = {}, use, afterCookie, beforeCookie;
        
        if(typeof PG.User.stories !== 'undefined' && typeof PG.User.stories.library.stories !== 'undefined') {
            for(i in PG.User.stories.library.stories) {
                if(typeof PG.User.stories.library.stories[i] === 'object') {
                    use = PG.User.checkStory(PG.User.stories.library.stories[i], before, after);
                    
                    if(use && before) {
                        b[i] = "true";
                        PG.User.createObjectsStory(PG.User.stories.library.stories[i]);
                    }else if(before) {
                        b[i] = "false";
                    }
                    if(use && after) {
                        a[i] = "true";
                    }else if(after) {
                        a[i] = "false";
                    }
                    
                    if(use && !before && !after) {
                        beforeCookie = PG.Util.readCookie('before');
                        if(PG.Util.not_null(beforeCookie)) {
                            beforeCookie = JSON.parse(beforeCookie);
                        }
                        afterCookie = PG.Util.readCookie('after');
                        if(PG.Util.not_null(afterCookie)) {
                            afterCookie = JSON.parse(afterCookie);
                        }
                        if(beforeCookie[i] === 'true' && afterCookie[i] === 'true') {
                            PG.App.send(PG.User.getStory(PG.User.stories.library.stories[i]));
                        }
                    }
                }
            }
            // set cookie to remember after and before
            if(before) {
                PG.Util.createCookie('before', JSON.stringify(b));
            }else if(after) {
                PG.Util.createCookie('after', JSON.stringify(a));
            }else {
                // Else remove before event
                PG.Util.createCookie('before', '');
            }
        }
        
        return;
    },
    
    /**
     * Check single story
     * 
     * if before = true 
     *  > check only before event
     * 
     * if after = true
     *  > check only after event
     * 
     * @function
     * 
     * @name PG.User.checkStory
     * 
     * @param {Object} story
     * @param {Boolean} before
     * @param {Boolean} after
     * @return {Boolean} result true | false
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.1
     */
    checkStory: function (story, before, after)
    {
        'use strict';
        PG.Util.log('user.js > checkStory (before:'+before+', after:'+after+') > name "' + story.action + '"');
        
        var use = true;
        
        if(PG.Util.not_null(story)) {
            
            if(before) {
                
                if(story.events.before.length === 0) {
                    PG.Util.log('user.js > checkStory > use story : false');
                    return true;
                }
                
                // CHECK STORY URL ?
                if(PG.Util.not_null(story.events.before.url)) {
                    use = (window.location.href.indexOf(story.events.before.url) !== -1);
                }
                
                // CHECK STORY XPATH ?
                if(PG.Util.not_null(story.events.before.xpath)) {
                    use = PG.Util.checkXpath(story.events.before.xpath);
                }
                
                PG.Util.log('user.js > checkStory > before > use story : ' + before);
            }else if(after) {
                
                if(story.events.after.length === 0) {
                    PG.Util.log('user.js > checkStory > use story : false');
                    return true;
                }
                
                // CHECK STORY URL ?
                if(PG.Util.not_null(story.events.after.url)) {
                    use = (window.location.href.indexOf(story.events.after.url) !== -1);
                }
                
                // CHECK STORY XPATH ?
                if(PG.Util.not_null(story.events.after.xpath)) {
                    use = PG.Util.checkXpath(story.events.after.xpath);
                }
                
                PG.Util.log('user.js > checkStory > after > use story : ' + after);
            }else {
                // CHECK STORY URL ?
                if(PG.Util.not_null(story.conditions.url)) {
                    use = (window.location.href.indexOf(story.conditions.url) !== -1);
                }
                
                // CHECK STORY XPATH ?
                if(PG.Util.not_null(story.conditions.xpath)) {
                    use = PG.Util.checkXpath(story.conditions.xpath);
                }
                
                PG.Util.log('user.js > checkStory > use story : ' + use);
            }
        }
        
        return use;
    },
    
    /**
     * Create valid story ready to send for playground
     * @function
     * 
     * @name PG.User.createObjectsStory
     * 
     * @param {Object} story
     * @return {Object} objects
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    createObjectsStory: function (story)
    {
        'use strict';
        PG.Util.log('user.js > createObjectsStory');
        
        var objects = {}, xpathObjects, propValue, properties = [], i, j, k, saveObject;
        
        if(typeof story.story_mapping_id !== 'undefined') {
            // FOR EACH OBJECTS
            for(i in story.objects) {
                if(typeof story.objects[i] === 'object' && typeof story.objects[i].properties !== 'undefined') {
                    properties = {};
                    
                    // FOR EACH PROPERTIES
                    for(j in story.objects[i].properties) {
                        if(typeof story.objects[i].properties[j] === 'object' && typeof story.objects[i].properties[j].name !== 'undefined') {
                            xpathObjects = PG.Util.getObjectFromXpath(story.objects[i].properties[j].xpath);
                            if(typeof xpathObjects !== 'undefined') {
                                
                                // FOR EACH DOM OBJECT FROM XPATH
                                for(k in xpathObjects) {
                                    propValue =  PG.Util.getValueFromObject(xpathObjects[k]);
                                    if(typeof xpathObjects === 'object' && propValue !== '') {
                                        properties[story.objects[i].properties[j].name] = propValue;
                                    }
                                }
                            }
                        }
                    }
                    
                    objects[story.objects[i].id] = properties;
                }
            }
        }
        
        for(i in objects) {
            if(typeof objects[i] === 'object' && PG.Util.keys(objects[i]) > 0) {
                PG.Util.createCookie('object.' + story.story_mapping_id, JSON.stringify(objects[i]));
            }else {
                //objects[i] = JSON.parse(PG.Util.readCookie('object.' + story.action + '.' + objects[i].id));
                objects[i] = JSON.parse(PG.Util.readCookie('object.' + story.story_mapping_id));
            }
        }
        return objects;
    },
    
    /**
     * return json story
     * @function
     * 
     * @name PG.User.getStory
     * 
     * @param {String} url
     * @param {Object} story
     * @return {Boolean} result true | false
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    getStory: function (story)
    {
        'use strict';
        
        var objects = PG.User.createObjectsStory(story),
            json = {
            user: {
                anonymous: PG.User.uid
            },
            objects: (objects !== null) ? objects : [],
            story_mapping_id:  story.story_mapping_id,
            url: window.location.href,
            apiKey: PG.Settings.apiKey
        };
        
        PG.Util.log("user.js > getStory");
        
        return json;
    },
    
    /**
     * Call this method when user quit the current to check if try to logout/login
     * make cookies 'login-try' and 'logout-try'
     * @function
     * 
     * @name PG.User.quit
     * 
     * @param {null}
     * @return {null}
     * 
     * @this {User}
     * 
     * @ignore
     * 
     * @since version 1.0.0
     */
    quit: function ()
    {
        'use strict';
        
        PG.Util.log('user.js > quit');
        
        PG.User.checkStories(true, false);
        
        PG.Util.createCookie('prev-url', window.location.href);
        
        return;
    }
};

// put the user into Playground.User
try {
    addToNamespace('User', user);
}catch(e) {
   throw new Error( "Cannot extends 'User' to 'Playground.User'" );
}
>>>>>>> refactoring flow and user, playground-333:view/frontend/assets/js/lib/playground/ears.min.js
;
/*
 * this is the main application file, which one that init project bind event, etc...
 * Copyright (C) 2013 - Playground
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
 
/**
 * @namespace reference to Playground.App object
 */

/** App Object
 * @class
 * @name PG.App
 */
function App ()
{
    'use strict';
    
    return this;
}

/**
 * Start the App object by using init
 * This method create the namespace used all over the application
 * @function
 * 
 * @name PG.App.init
 * 
 * @param {null} no params
 * @return {null} no return
 * 
 * @this {App}
 * 
 * @ignore
 * 
 * @since version 1.0.0
 */
App.prototype.init = function ()
{
    'use strict';
    
    // check api key
    if(PG.Util.not_null(PG.Settings) && PG.Util.not_null(PG.Settings.apiKey)) {
        //PG.User.env = _plgd_settings;
        PG.Util.log('APIKEY FOUND : ' + PG.Settings.apiKey);
    }else {        
        PG.Util.log('NO APIKEY FOUND');
        return;
    }
    
    PG.App.easyXDM();
    PG.App.bindEvent();
    PG.User.init();
    
    PG.Util.fireEvt(
        'earsReady',
        window,
        {
            apiKey: PG.Settings.apiKey,
            uid: PG.User.uid,
            login: PG.User.id
		}
	);
};

/**
 * Bind the event to track user move
 * @function
 * 
 * @name PG.App.bindEvent
 * 
 * @param {null} no params
 * @return {null} no return
 * 
 * @this {App}
 * 
 * @ignore
 * 
 * @since version 1.0.0
 */
App.prototype.bindEvent = function ()
{
    'use strict';
    
    // AJAX
    var xhrListn = new Object();
        xhrListn.open = PG.Cache.xmlhttp.prototype.open;
        xhrListn.send = PG.Cache.xmlhttp.prototype.send;
    
    // Catch all the xhr open event
    PG.Cache.xmlhttp.prototype.open = function (a, b)
    {
        if (!a) a = '';
        if (!b) b = '';
        
        xhrListn.open.apply(this, arguments);
        xhrListn.method = a;  
        xhrListn.url = b;
        if (a.toLowerCase() === 'get') {
            xhrListn.data = b.split('?');
            xhrListn.data = xhrListn.data[1];
        }
    };
    
    // Catch all the xhr send event
    PG.Cache.xmlhttp.prototype.send = function (a, b)
    {
        if (!a) a = '';
        if (!b) b = '';
        xhrListn.send.apply(this, arguments);
        if(xhrListn.method.toLowerCase() === 'post') xhrListn.data = a;
    };
    
    // Catch all the load finished event
    PG.Cache.document.onreadystatechange = function (e)
    {
        if(PG.Util.not_null(e.data) && e.data !== '') {
            //PG.App.send(e.data);
        }
    };
    
    PG.Cache.window.onbeforeunload = function (e)
    {
        PG.User.quit();
        return null;
    };
};

/**
 * Bind the event to track user click into an area
 * @function
 * 
 * @name PG.App.trackAreaEvent
 * 
 * @param {null} no params
 * @return {null} no return
 * 
 * @this {App}
 * 
 * @ignore
 * 
 * @since version 1.0.0
 */
App.prototype.trackAreaEvent = function ()
{
	'use strict';
	
    var i, story;
    
    function bindEvent (obj, story)
    {
        var data = PG.User.getStory(window.location.href, story.action, story.objects),
            areaObj = PG.Util.getObjectFromXpath(story.event.area.xpath),
            realArea,
            offset;
        
        if(typeof story.event.area.width === 'undefined' || !PG.Util.not_null(story.event.area.width)) {
            if(!PG.Util.not_null(areaObj[0])) {
                return;
            }
            story.event.area.width = areaObj[0].offsetWidth;
            story.event.area.height = areaObj[0].offsetHeight;
        }
        
        if(typeof story.event.area.x === 'undefined' || !PG.Util.not_null(story.event.area.y)) {
            story.event.area.x = 0;
            story.event.area.y = 0;
        }
        
        offset = PG.Util.getOffset(areaObj[0]);
        
        realArea = {
            x: story.event.area.x + offset.x,
            y: story.event.area.y + offset.y,
            width: story.event.area.width,
            height: story.event.area.height
        };

        if(typeof story.event.area.debug !== 'undefined' && story.event.area.debug === true) {
            PG.Util.createShape(realArea);
        }
        
        obj.addEventListener(story.event.type, function (e)
        {
            e.preventDefault();
            
            data.objects.x = e.pageX;
            data.objects.y = e.pageY;
            data.objects.text = window.getSelection().toString();
            
            if(PG.Util.not_null(story.event.area.text) && story.event.area.text !== '' && data.objects.text !== story.event.area.text) {
                return;
            }
            
            if(PG.Util.not_null(areaObj) && PG.Util.pointOnBox(data.objects, realArea)) {
            
	            PG.App.sendToEXDM({
	                url: PG.Cache.protocol + PG.Config.env[PG.Config.mode].send,
	                method: 'POST',
	                data: data,
	                headers: {
	                    'Content-Type': 'application/json; charset=utf-8'
	                }
	            });
            }
            
            return false;
        });
    }
    
    for(i in PG.User.data.library.stories) {
        story = PG.User.data.library.stories[i];
        
        if(PG.User.checkStory(story.conditions)
            && PG.Util.not_null(story.event)) {
            
            bindEvent(PG.Util.getObjectFromXpath(story.event.xpath)[0], story);
        }
    }
};

/**
 * Init easyXDM by calling this method
 * Using easyXDM as RPC mode
 * @function
 * 
 * @name PG.App.easyXDM
 * 
 * @param {null} no params
 * @return {null} no return
 * 
 * @this {App}
 * 
 * @ignore
 * 
 * @since version 1.0.0
 */
App.prototype.easyXDM = function ()
{
    'use strict';
    
    PG.App.rpc = new easyXDM.Rpc(
    {
        // fallback NameTransport
        local: PG.Cache.protocol + PG.Config.env[PG.Config.mode].nameTransport,
        // fallback swf
        swf: PG.Cache.protocol + PG.Config.env[PG.Config.mode].easySwf,
        // page to load
        remote: PG.Cache.protocol + PG.Config.env[PG.Config.mode].remote
    },
    {
        remote: {
            request: {}
        }
    });
};

/**
 * Send a request to easyXDM using RPC with no return
 * @function
 * 
 * @name PG.App.send
 * 
 * @param {string} url of the service
 * @return {Boolean} valid url
 * 
 * @this {App}
 * 
 * @example
 * PG.App.send( {String} url)
 * 
 * @since version 1.0.0
 */
App.prototype.send = function (story)
{
    'use strict';
    
    PG.Util.log("app.js > send > story", story);
    
    PG.App.sendToEXDM({
            url: PG.Cache.protocol + PG.Config.env[PG.Config.mode].send,
            method: 'POST',
            data: story,
            headers: {
                'Content-Type': 'application/json; charset=utf-8'
            }
        });
    
    return;
};

/**
 * Send a request to easyXDM using RPC with no return
 * @function
 * 
 * @name PG.App.send
 * 
 * @param {string} url of the service
 * @return {Boolean} valid url
 * 
 * @this {App}
 * 
 * @ignore
 * 
 * @since version 1.0.0
 */
App.prototype.sendToEXDM = function (config)
{
    'use strict';
    
    PG.App.rpc.request(
        config,
        function (rpcdata)
        {
            //PG.Util.log(rpcdata);
        },
        function (error)
        {
            throw 'Api Error, code : ' + error.code + ', msg : ' + error.message;
        }
    );
};

/**
 * Send a request to easyXDM using RPC waiting for a json return
 * @function
 * 
 * @name PG.App.call
 * 
 * @param {string} serviceName
 * @return {Object} promise
 * 
 * @this {App}
 * 
 * @throws {requestError} service cannot be called
 * 
 * @example
 * PG.App.call( {String} service )
 * .then( {Function} callback)
 * 
 * @since version 1.0.0
 */
App.prototype.call = function (s)
{
    'use strict';
    var promise = new PG.Promise();
    
    PG.Util.log('call service : ' + PG.Cache.protocol + s + '?apiKey=' + PG.Settings.apiKey);
    
    PG.App.rpc.request(
        {
            url: PG.Cache.protocol + s + '?apiKey=' + PG.Settings.apiKey,
            method: 'GET'
        },
        function (rpcdata)
        {
            promise.resolve(JSON.parse(rpcdata.data));
        },
        function (error)
        {
            throw 'Api Error, code : ' + error.code + ', msg : ' + error.message;
        }
    );
    
    return promise;
};

// create App instance
var app = new App();

// put the instance of App into the namespace Playground.App
try {
    addToNamespace('App', app);
}catch(e) {
   throw new Error( "Cannot extends 'app' to 'playground.App'" );
}

// Let's start over there
app.init();
;